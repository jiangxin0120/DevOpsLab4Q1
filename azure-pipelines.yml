trigger:
- master

pool:
  name: Default
  demands:
  - agent.name -equals Agent

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nuGetPackageId: 'StringLibaryExample'
  nuGetPackageVersion: '1.0.0' 

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Add a task to pack the class library project
- task: DotNetCoreCLI@2
  displayName: 'DotNet Pack'
  inputs:
    command: 'pack'
    projects: '**/*StringLibary.csproj'
    configuration: '$(buildConfiguration)'
    version: '$(nuGetPackageVersion)'
    outputDir: '$(Build.ArtifactStagingDirectory)/nuget'

# Add a task to push the NuGet package to Azure Artifacts
- task: NuGetCommand@2
  displayName: 'NuGet Push'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/**/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'xjiang38'
